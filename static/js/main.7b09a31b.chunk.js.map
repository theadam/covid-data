{"version":3,"sources":["Header.jsx","utils.js","features.js","AirbnbSlider.jsx","PlaySlider.jsx","DataLayer.jsx","Loader.jsx","Snackbar.jsx","LeafletSection.jsx","AutocompleteInput.jsx","BasicDataSection.jsx","MapCard.jsx","ControlledHighlight.jsx","Chart.jsx","ChartCard.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","AppBar","color","position","css","Toolbar","Typography","variant","getAllMax","data","getter","max","Object","keys","forEach","key","item","dates","length","console","log","val","dateRegexp","formatDate","d","exec","month","day","isToday","date","year","Date","Number","toDate","today","getDate","getMonth","getFullYear","covidTipInfo","showNoCases","confirmed","deaths","covidTipMaker","feature","title","properties","name","info","flipCoords","coords","Array","isArray","map","values","obj","formatPercent","p","Math","round","roundTenths","perMillionPop","value","pop","undefined","ratio","countriesWithRegions","baseFeatures","world","topojson","worldData","objects","countries","usStates","countyData","states","usCounties","counties","china","chinaData","CHN_adm1","australia","australiaData","canada","provinceData","canadaprov","enrichFeatures","featureCollection","featureKey","id","displayName","features","fipsData","NAME_1","STATE_NAME","mapCountryData","fn","featureMap","finals","result","final","mapBy","countryCode","country","geometry","reduce","acc","pluckFeatureData","provinces","allData","worldValues","sortData","list","copy","slice","sort","a","b","localeCompare","allDataValues","worldItem","population","v","dateRange","i","forIndex","withStyles","root","height","padding","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","marginRight","active","valueLabel","zIndex","left","track","rail","opacity","Slider","PlaySlider","play","index","playing","setIndex","formatLabel","hideTip","style","display","alignItems","flex","IconButton","onClick","paddingRight","AirbnbSlider","valueLabelDisplay","min","marks","onChange","_","valueLabelFormat","interpolateReds","interp","interpolate","brighter","formatHex","sqrt","React","memo","getShow","getStroke","onHighlight","onSelect","calculateValue","propsRef","useRef","current","GeoJSON","onEachFeature","layer","on","mouseover","bringToFront","setStyle","weight","dashArray","mouseout","click","show","stroke","st","fillOpacity","fillColor","Loader","loading","CircularProgress","listeners","MyBar","useState","text","setText","useEffect","push","filter","f","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","autoHideDuration","message","landMap","ext","url","attribution","subdomains","maxZoom","defaultPosition","LeafletPage","centeredItem","mapRef","highlight","setHighlight","leafletElement","fitBounds","coordinates","polyline","makePolyline","getBounds","setView","zoom","setZoom","showCounties","useMemo","showProvinces","getShowCounties","useCallback","getShowProvinces","provinceMax","countiesMax","worldMax","flexBasis","maxHeight","Map","ref","worldCopyJump","background","onViewportChanged","newZoom","className","Highlight","DataLayer","includes","Pane","TileLayer","noWrap","deathPercent","toLocaleString","filterOptions","createFilterOptions","limit","multiple","selected","Autocomplete","options","getOptionLabel","option","selectOnFocus","limitTags","renderInput","params","TextField","InputProps","startAdornment","InputAdornment","label","size","BasicDataSection","selectedItem","marginBottom","justifyContent","component","MapCard","setOpen","setSelectedItem","frame","rawSetFrame","setPlaying","timeoutRef","setFrame","l","clearTimeout","cur","step","setTimeout","usePlayer","dataKey","setDataKey","usePopulation","setUsePopulation","anchor","handleMenu","usePop","Card","CardContent","top","right","aria-label","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","ControlledHighlight","this","updateArea","props","area","state","brushing","dragging","newLeft","newRight","xScale","getAttributeScale","brushArea","innerHeight","plotHeight","setState","bottom","dragArea","drag","rect","children","newRect","onTouchStart","e","evt","nativeEvent","type","pageX","touches","pageY","preventDefault","startBrushing","onTouchMove","offsetX","offsetY","onBrush","calculateIncrease","old","mapCalculations","increaseConfirmed","items","addedConfirmed","calculateAdded","increaseDeaths","confirmedPerMillion","deathsPerMillion","typeText","formatValue","n","legendClass","noSelect","crosshairClass","formatNumber","formatTitle","getYDomain","xDomain","maxY","minY","y","getInitialDomain","last","Plot","makeWidthFlexible","XYPlot","onLegendClick","crosshairValues","setCrosshairValues","formattedDates","formatter","calc","removeLastEach","mapObject","k","pick","x","domain","rawSetDomain","setDomain","animation","window","innerWidth","yDomain","margin","fontSize","tickFormat","includeMargin","xPercent","yPercent","transform","textAnchor","itemsFormat","formatItem","titleFormat","curve","curveCatmullRom","alpha","onNearestX","Brusher","onItemClick","orientation","isValid","first","rawSetArea","setArea","overflow","enableY","onBrushStart","onBrushEnd","onDrag","onDragEnd","ChartCard","setType","selectedItems","setSelectedItems","handleType","Chart","Body","App","styles","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7b09a31b.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { css } from '@emotion/core';\n\nexport default function Header() {\n  return (\n    <AppBar\n      color=\"primary\"\n      position=\"static\"\n      css={css`\n        margin-bottom: 20px;\n      `}\n    >\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\">\n          Covid Data\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { geoPath } from 'd3-geo';\nimport { polyline } from 'leaflet';\n\nexport const debounce = (fn, time) => {\n  let cancel;\n  return (...args) => {\n    if (cancel) clearTimeout(cancel);\n    cancel = setTimeout(() => fn(...args), time);\n  };\n};\n\nexport function sizeProjection(projection, width) {\n  const outline = { type: 'Sphere' };\n\n  const [[x0, y0], [x1, y1]] = geoPath(\n    projection.fitWidth(width, outline),\n  ).bounds(outline);\n\n  const dy = Math.ceil(y1 - y0),\n    l = Math.min(Math.ceil(x1 - x0), dy);\n  projection.scale((projection.scale() * (l - 1)) / l).precision(0.2);\n  return dy;\n}\n\n// Get the index for each key in a map of arrays\nexport function getDataIndex(data, index) {\n  if (!data) return [];\n  const keys = Object.keys(data);\n  return keys.map((key) => {\n    const list = data[key];\n    return list[index !== undefined ? index : data[key].length - 1];\n  });\n}\n\nexport function mapBy(finals, fn) {\n  const result = {};\n  finals.forEach((final) => {\n    if (!final) return;\n    const key = fn(final);\n    if (!key) return;\n    result[key] = final;\n  });\n  return result;\n}\n\nexport function getAllMax(data, getter) {\n  let max = 0;\n  const keys = Object.keys(data || {});\n\n  keys.forEach((key) => {\n    const item = data[key];\n    const dates = item.dates;\n    if (!dates[dates.length - 1])\n      console.log(key, item, dates[dates.length - 1]);\n    const val = getter(item, dates.length - 1);\n    if (val > max) {\n      max = val;\n    }\n  });\n  return max;\n}\n\nexport function getMax(finals, key) {\n  let max = 0;\n\n  finals.forEach((datum) => {\n    const val = datum[key];\n    if (val > max) {\n      max = val;\n    }\n  });\n  return max;\n}\n\nexport function firstArray(data) {\n  if (!data) return [];\n  const firstKey = Object.keys(data)[0];\n  return data[firstKey].dates;\n}\n\nconst dateRegexp = /^(\\d{4})-0?(\\d{1,2})-0?(\\d{1,2})T?/;\nexport function formatDate(d) {\n  const [, , /*year*/ month, day] = dateRegexp.exec(d);\n  return `${month}/${day}`;\n}\n\nexport function toDate(d) {\n  const [, year, month, day] = dateRegexp.exec(d);\n  return new Date(Number(year), Number(month) - 1, Number(day));\n}\n\nexport function isToday(d) {\n  const date = toDate(d);\n  const today = new Date();\n  return (\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n  );\n}\n\nexport function usePlayer(length) {\n  const [frame, rawSetFrame] = React.useState(Math.max(length - 1, 0));\n  const [playing, setPlaying] = React.useState(false);\n  const timeoutRef = React.useRef(null);\n  React.useEffect(() => {\n    rawSetFrame(Math.max(length - 1, 0));\n  }, [length]);\n\n  function setFrame(l) {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      setPlaying(false);\n    }\n    rawSetFrame(l);\n  }\n\n  function play() {\n    if (playing) {\n      clearTimeout(timeoutRef.current);\n      setPlaying(false);\n      return;\n    }\n    let cur = frame === length - 1 ? 0 : frame;\n    setPlaying(true);\n    const step = () => {\n      rawSetFrame(cur++);\n      if (cur < length) {\n        timeoutRef.current = setTimeout(step, 200);\n      } else {\n        setPlaying(false);\n      }\n    };\n    step();\n  }\n  return { frame, setFrame, playing, play };\n}\n\nexport function useProjection(projection) {\n  const [width, setWidthState] = React.useState(null);\n  const [path, setPath] = React.useState(() =>\n    geoPath().projection(projection),\n  );\n  React.useEffect(() => {\n    setPath(() => geoPath().projection(projection));\n  }, [projection]);\n  const [height, setHeight] = React.useState(null);\n  const setWidth = React.useMemo(\n    () => (width) => {\n      setWidthState(width);\n      const height = sizeProjection(projection, width);\n      setPath(() => geoPath().projection(projection));\n      setHeight(height);\n    },\n    [setWidthState, projection],\n  );\n  const comp = React.useRef(null);\n\n  const ref = React.useMemo(\n    () => (c) => {\n      if (c === null) return;\n      comp.current = c;\n      const width = c.getBoundingClientRect().width;\n      setWidth(width);\n    },\n    [setWidth],\n  );\n\n  React.useEffect(() => {\n    function listener() {\n      if (comp.current) {\n        setWidth(comp.current.getBoundingClientRect().width);\n      }\n    }\n    const debounced = debounce(listener, 400);\n    window.addEventListener('resize', debounced);\n    return () => window.removeEventListener('resize', debounced);\n  }, [setWidth]);\n\n  return { ref, path, width, height };\n}\n\nexport function usePrevious(value) {\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function scaleXy([x, y], scale) {\n  return [x * scale, y * scale];\n}\n\nexport function translateXy([x, y], translate) {\n  return [x + translate[0], y + translate[1]];\n}\n\nexport function transformXy(xy, transform) {\n  return translateXy(\n    scaleXy(xy, transform.scale),\n    transform.translate.map((t) => t),\n  );\n}\n\nexport function transformBounds(bounds, transform) {\n  return bounds.map((xy) => transformXy(xy, transform));\n}\n\nexport function covidTipInfo(data, showNoCases) {\n  if (!data) {\n    if (showNoCases) {\n      return <div>No Cases</div>;\n    } else {\n      return null;\n    }\n  }\n  return (\n    <>\n      <div>{data.confirmed} Confirmed Cases</div>\n      <div>{data.deaths} Fatalities</div>\n    </>\n  );\n}\n\nconst covidTipMaker = (showNoCases) => (feature, data) => {\n  return {\n    title: feature.properties.name,\n    info: covidTipInfo(data, showNoCases),\n  };\n};\n\nexport const covidTip = covidTipMaker(false);\nexport const covidTipIncludingNoCases = covidTipMaker(true);\n\nexport function pluck(keys, map) {\n  return keys.reduce((acc, key) => ({ ...acc, [key]: map[key] }), {});\n}\n\nexport function sort(list, fn) {\n  const copy = list.slice();\n  copy.sort(fn);\n  return copy;\n}\n\nfunction flipCoords(coords) {\n  if (coords.length === 0) return coords;\n  if (Array.isArray(coords[0])) return coords.map(flipCoords);\n  return [coords[1], coords[0]];\n}\n\nexport function makePolyline(geometry) {\n  const coords = geometry.coordinates.map(flipCoords);\n  return polyline(coords);\n}\n\nexport function values(obj) {\n  const keys = Object.keys(obj);\n  return keys.map((key) => obj[key]);\n}\n\nexport function mapObject(obj, fn) {\n  return Object.keys(obj).reduce((acc, key) => {\n    return { ...acc, [key]: fn(obj[key], key) };\n  }, {});\n}\n\nexport function roundTenths(p) {\n  return Math.round(p * 10) / 10;\n}\n\nexport function formatPercent(p) {\n  return roundTenths(p * 100);\n}\n\nexport function empty(val) {\n  return val === null || val === undefined;\n}\n\nexport function perMillionPop(value, pop) {\n  if (empty(value) || !pop) return undefined;\n  const ratio = pop / 1000000;\n  return Math.round(value / ratio);\n}\n","import countyData from './data/counties-10m.json';\nimport * as topojson from 'topojson-client';\nimport worldData from './data/countries-50m.json';\nimport provinceData from './data/canadaprovtopo.json';\nimport australiaData from './data/au-states.json';\nimport chinaData from './data/china-provinces.json';\nimport fipsData from './fipsData.json';\n\nimport countries from './data/world.json';\nimport states from './data/state.json';\nimport provinces from './data/province.json';\nimport counties from './data/county.json';\nimport dateRange from './data/dateRange.json';\nimport { values, sort, mapBy, mapObject } from './utils';\n\nexport { dateRange };\n\nexport const USA = '840';\nexport const Canada = '124';\nexport const China = '156';\nexport const Australia = '036';\n\nexport const countriesWithRegions = [USA, Canada, China, Australia];\n\nconst baseFeatures = {\n  world: topojson.feature(worldData, worldData.objects.countries),\n  usStates: topojson.feature(countyData, countyData.objects.states),\n  usCounties: topojson.feature(countyData, countyData.objects.counties),\n  china: topojson.feature(chinaData, chinaData.objects.CHN_adm1),\n  australia: topojson.feature(australiaData, australiaData.objects.states),\n  canada: topojson.feature(provinceData, provinceData.objects.canadaprov),\n};\n\nfunction enrichFeatures(\n  featureCollection,\n  featureKey = (feature) => feature.id,\n  displayName = (feature) => feature.properties.name,\n) {\n  return {\n    ...featureCollection,\n    features: featureCollection.features.map((feature) => {\n      const key = featureKey(feature);\n      return {\n        ...feature,\n        key,\n        displayName: displayName(feature),\n      };\n    }),\n  };\n}\n\nfunction createFeatures() {\n  return {\n    world: enrichFeatures(baseFeatures.world, undefined, (feature) =>\n      feature.properties.name === 'Georgia'\n        ? 'Georgia (country)'\n        : feature.properties.name,\n    ),\n    usStates: enrichFeatures(baseFeatures.usStates),\n    usCounties: enrichFeatures(\n      baseFeatures.usCounties,\n      undefined,\n      (feature) => {\n        if (!fipsData[feature.id]) {\n          console.log(feature.id);\n        }\n        return fipsData[feature.id].displayName;\n      },\n    ),\n    china: enrichFeatures(\n      baseFeatures.china,\n      (feature) => `${China}-${feature.properties.NAME_1}`,\n      (feature) => feature.properties.NAME_1,\n    ),\n    australia: enrichFeatures(\n      baseFeatures.australia,\n      (feature) => `${Australia}-${feature.properties.STATE_NAME}`,\n      (feature) => feature.properties.STATE_NAME,\n    ),\n    canada: enrichFeatures(\n      baseFeatures.canada,\n      (feature) => `${Canada}-${feature.properties.name}`,\n    ),\n  };\n}\n\nconst features = createFeatures();\nexport default features;\n\nfunction mapCountryData(featureCollection, data) {\n  const featureMap = mapBy(\n    featureCollection.features,\n    (feature) => feature.key,\n  );\n  return mapObject(data, (item, key) => {\n    const feature = featureMap[key];\n\n    return {\n      ...data[key],\n      key: feature ? feature.key : item.countryCode,\n      displayName: feature ? feature.displayName : item.country,\n      geometry: feature ? feature.geometry : null,\n    };\n  });\n}\n\nfunction pluckFeatureData(featureCollection, data) {\n  return featureCollection.features.reduce(\n    (acc, { geometry, displayName, key }) => {\n      if (data[key]) {\n        acc[key] = {\n          ...data[key],\n          key,\n          displayName,\n          geometry,\n        };\n      }\n      return acc;\n    },\n    {},\n  );\n}\n\nfunction splitData(data) {\n  return {\n    world: mapCountryData(features.world, data.countries),\n    usStates: pluckFeatureData(features.usStates, data.states),\n    usCounties: pluckFeatureData(features.usCounties, data.counties),\n    china: pluckFeatureData(features.china, data.provinces),\n    australia: pluckFeatureData(features.australia, data.provinces),\n    canada: pluckFeatureData(features.canada, data.provinces),\n  };\n}\nexport const data = splitData({ countries, states, provinces, counties });\n\nfunction mergeAll(obj) {\n  const keys = Object.keys(obj);\n  return keys.reduce((acc, key) => ({ ...acc, ...obj[key] }), {});\n}\n\nexport const allData = mergeAll(data);\n\nconst worldValues = values(data.world);\n\nconst sortData = (data) =>\n  sort(data, (a, b) => a.displayName.localeCompare(b.displayName));\n\nexport const allDataValues = [\n  ...sortData(values(data.world)),\n  ...sortData(values(data.usStates)),\n  ...sortData(values(data.china)),\n  ...sortData(values(data.australia)),\n  ...sortData(values(data.canada)),\n  ...sortData(values(data.usCounties)),\n];\n\nexport const worldItem = {\n  displayName: 'Worldwide',\n  key: 'world',\n  population: worldValues.reduce((acc, v) => acc + v.population, 0),\n  dates: dateRange.map((date, i) => {\n    const forIndex = worldValues.reduce(\n      (acc, item) => {\n        const data = item.dates[i];\n        return {\n          confirmed: acc.confirmed + data.confirmed,\n          deaths: acc.deaths + data.deaths,\n        };\n      },\n      { confirmed: 0, deaths: 0 },\n    );\n    return { date, ...forIndex };\n  }),\n};\n","import Slider from '@material-ui/core/Slider';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport default withStyles({\n  root: {\n    color: '#3a8589',\n    height: 3,\n    padding: '13px 0',\n  },\n  thumb: {\n    height: 27,\n    width: 27,\n    backgroundColor: '#fff',\n    border: '1px solid currentColor',\n    marginTop: -12,\n    marginLeft: -13,\n    boxShadow: '#ebebeb 0px 2px 2px',\n    '&:focus, &:hover, &$active': {\n      boxShadow: '#ccc 0px 2px 3px 1px',\n    },\n    '& .bar': {\n      // display: inline-block !important;\n      height: 9,\n      width: 1,\n      backgroundColor: 'currentColor',\n      marginLeft: 1,\n      marginRight: 1,\n    },\n  },\n  active: {},\n  valueLabel: {\n    zIndex: 1000,\n    marginLeft: 4,\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 3,\n  },\n  rail: {\n    color: '#d8d8d8',\n    opacity: 1,\n    height: 3,\n  },\n})(Slider);\n\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\n\nimport AirbnbSlider from './AirbnbSlider';\nexport default function PlaySlider({\n  length,\n  play,\n  index,\n  playing,\n  setIndex,\n  formatLabel,\n  hideTip,\n}) {\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <div style={{ flex: 0 }}>\n        <IconButton onClick={play}>\n          {playing ? <Pause /> : <PlayArrow />}\n        </IconButton>\n      </div>\n      <div style={{ flex: 1, paddingRight: 20 }}>\n        <AirbnbSlider\n          valueLabelDisplay={hideTip ? 'off' : playing ? 'on' : 'auto'}\n          value={index}\n          min={0}\n          max={length - 1}\n          marks\n          onChange={(_, i) => setIndex(i)}\n          valueLabelFormat={formatLabel}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { GeoJSON } from 'react-leaflet';\n// import { interpolateReds } from 'd3-scale-chromatic';\nimport { interpolate as interp } from 'd3-interpolate';\nimport { color } from 'd3-color';\n\nconst colorStart = '#FFEDA0';\nconst colorEnd = '#800026';\nconst interpolateReds = interp(colorStart, colorEnd);\n\nfunction interpolate(data, max) {\n  if (data === null || data === undefined) {\n    return color(colorStart).brighter(0.2).formatHex();\n  }\n  return color(\n    interpolateReds(Math.sqrt(Math.sqrt(data)) / Math.sqrt(Math.sqrt(max))),\n  )\n    .brighter(0.2)\n    .formatHex();\n}\n\nexport default React.memo(\n  ({\n    index,\n    data,\n    featureCollection,\n    getShow = () => true,\n    getStroke,\n    onHighlight,\n    max,\n    style = () => ({}),\n    onSelect,\n    calculateValue,\n  }) => {\n    const propsRef = React.useRef({ index, data, style });\n    propsRef.current = { index, data, style };\n\n    return (\n      <GeoJSON\n        data={featureCollection}\n        onEachFeature={(feature, layer) => {\n          layer.on({\n            mouseover: () => {\n              layer.bringToFront();\n              layer.setStyle({\n                weight: 3,\n                dashArray: '',\n              });\n              onHighlight({\n                feature: feature,\n                data: propsRef.current?.data?.[feature.key],\n                displayName: feature.displayName,\n              });\n            },\n            mouseout: () => {\n              layer.setStyle({\n                weight: 1,\n                dashArray: 3,\n                ...propsRef.current?.style(\n                  feature,\n                  propsRef.current?.data?.[feature.key]?.[\n                    propsRef.current?.index\n                  ],\n                ),\n              });\n              onHighlight(null);\n            },\n            click: () => {\n              onSelect(propsRef.current?.data?.[feature.key]);\n            },\n          });\n        }}\n        style={(feature) => {\n          const show = getShow(feature);\n          const stroke = getStroke ? getStroke(feature) : show;\n          const item = data?.[feature.key];\n          const dates = item?.dates;\n          const date = dates?.[index];\n          const value = calculateValue(item, index);\n          const st = style(feature, item, date);\n          return {\n            weight: 1,\n            stroke,\n            color: 'white',\n            dashArray: 3,\n            fillOpacity: 1,\n            fillColor: show ? interpolate(value, max) : 'none',\n            ...st,\n          };\n        }}\n      />\n    );\n  },\n);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { css } from '@emotion/core';\n\nexport default function Loader({ loading }) {\n  if (!loading) return null;\n  return (\n    <div\n      css={css`\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translateY(-50%);\n      `}\n    >\n      <CircularProgress />\n    </div>\n  );\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nlet listeners = [];\nconst listen = (fn) => {\n  listeners.push(fn);\n  return () => {\n    listeners = listeners.filter((f) => f !== fn);\n  };\n};\n\nconst emit = (val) => {\n  listeners.forEach((f) => f(val));\n};\n\nexport default function MyBar() {\n  const [text, setText] = React.useState(null);\n  React.useEffect(() => {\n    return listen(setText);\n  }, []);\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={text !== null}\n      onClose={() => setText(null)}\n      autoHideDuration={6000}\n      message={text}\n    />\n  );\n}\n\nMyBar.open = (text) => {\n  emit(text);\n};\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport { Pane, Map, TileLayer } from 'react-leaflet';\nimport { formatPercent, getAllMax, makePolyline, perMillionPop } from './utils';\nimport DataLayer from './DataLayer';\nimport Loader from './Loader';\nimport features, { data, countriesWithRegions } from './features';\nimport Snackbar from './Snackbar';\n\nvar landMap = {\n  ext: 'png',\n  url: 'https://{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}{r}.png',\n  attribution:\n    '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  subdomains: 'abcd',\n  maxZoom: 19,\n};\n\nconst stateThreshold = 3;\nconst countyThreshold = 5;\n\nconst defaultPosition = [0, 0];\nconst defaultZoom = 2;\n\nexport default function LeafletPage({\n  calculateValue,\n  centeredItem,\n  onSelect,\n  index,\n  population,\n}) {\n  const mapRef = React.useRef();\n  const [highlight, setHighlight] = React.useState(null);\n  React.useEffect(() => {\n    if (centeredItem) {\n      if (centeredItem.geometry) {\n        mapRef.current.leafletElement.fitBounds(\n          makePolyline(centeredItem.geometry).getBounds(),\n        );\n      } else {\n        Snackbar.open(`${centeredItem.displayName} is too small for this map`);\n      }\n    } else {\n      mapRef.current.leafletElement.setView(defaultPosition, defaultZoom);\n    }\n  }, [centeredItem]);\n  const [zoom, setZoom] = React.useState(defaultZoom);\n  const showCounties = React.useMemo(() => zoom >= countyThreshold, [zoom]);\n  const showProvinces = React.useMemo(() => zoom >= stateThreshold, [zoom]);\n  const getShowCounties = React.useCallback(() => showCounties, [showCounties]);\n  const getShowProvinces = React.useCallback(() => showProvinces, [\n    showProvinces,\n  ]);\n\n  const provinceMax = React.useMemo(\n    () => getAllMax({ ...data.provinces, ...data.usStates }, calculateValue),\n    [calculateValue],\n  );\n  const countiesMax = React.useMemo(\n    () => getAllMax(data.usCounties, calculateValue),\n    [calculateValue],\n  );\n  const worldMax = React.useMemo(() => getAllMax(data.world, calculateValue), [\n    calculateValue,\n  ]);\n\n  const loading = !data.world;\n  return (\n    <div\n      css={css`\n        user-select: none;\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n      `}\n      style={{ position: 'relative' }}\n    >\n      <div\n        style={{\n          flex: 1,\n          flexBasis: 600,\n          maxHeight: '65vh',\n          display: 'flex',\n        }}\n      >\n        <Loader loading={loading} />\n        <Map\n          ref={mapRef}\n          worldCopyJump\n          zoom={zoom}\n          style={{\n            flex: 1,\n            opacity: loading ? 0.5 : undefined,\n            background: 'rgb(202, 210, 211)',\n            position: 'relative',\n          }}\n          onViewportChanged={({ zoom: newZoom }) =>\n            zoom !== newZoom && setZoom(newZoom)\n          }\n        >\n          {!loading && (\n            <div\n              className=\"highlight-info\"\n              css={css`\n                pointer-events: none;\n                z-index: 1000;\n                position: absolute;\n                top: 10px;\n                right: 10px;\n                padding: 6px 8px;\n                font: 14px/16px Arial, Helvetica, sans-serif;\n                background: rgba(255, 255, 255, 0.8);\n                box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n                border-radius: 5px;\n                h4 {\n                  margin: 0 0 5px;\n                  color: #777;\n                }\n              `}\n            >\n              <Highlight highlight={highlight} index={index} />\n            </div>\n          )}\n          <DataLayer\n            calculateValue={calculateValue}\n            onSelect={onSelect}\n            index={index}\n            name=\"usCounties\"\n            featureCollection={features.usCounties}\n            getShow={getShowCounties}\n            data={data.usCounties}\n            onHighlight={setHighlight}\n            max={countiesMax}\n          />\n          <DataLayer\n            calculateValue={calculateValue}\n            onSelect={onSelect}\n            index={index}\n            name=\"usStates\"\n            featureCollection={features.usStates}\n            data={data.usStates}\n            getShow={getShowProvinces}\n            onHighlight={setHighlight}\n            max={provinceMax}\n            style={React.useCallback(\n              () =>\n                showCounties\n                  ? {\n                      weight: 2,\n                      fillColor: 'none',\n                    }\n                  : {},\n              [showCounties],\n            )}\n          />\n          <DataLayer\n            calculateValue={calculateValue}\n            onSelect={onSelect}\n            index={index}\n            name=\"canada\"\n            featureCollection={features.canada}\n            data={data.canada}\n            getShow={getShowProvinces}\n            onHighlight={setHighlight}\n            max={provinceMax}\n          />\n          <DataLayer\n            calculateValue={calculateValue}\n            onSelect={onSelect}\n            index={index}\n            name=\"china\"\n            featureCollection={features.china}\n            data={data.china}\n            getShow={getShowProvinces}\n            onHighlight={setHighlight}\n            max={provinceMax}\n          />\n          <DataLayer\n            calculateValue={calculateValue}\n            onSelect={onSelect}\n            index={index}\n            name=\"australia\"\n            featureCollection={features.australia}\n            data={data.australia}\n            getShow={getShowProvinces}\n            onHighlight={setHighlight}\n            max={provinceMax}\n          />\n          <DataLayer\n            calculateValue={calculateValue}\n            onSelect={onSelect}\n            index={index}\n            name=\"world\"\n            featureCollection={features.world}\n            data={data.world}\n            onHighlight={setHighlight}\n            max={worldMax}\n            style={React.useCallback(\n              (feature) =>\n                showProvinces\n                  ? {\n                      weight: 2,\n                      ...(countriesWithRegions.includes(feature.id)\n                        ? { fillColor: 'none' }\n                        : {}),\n                    }\n                  : {},\n              [showProvinces],\n            )}\n          />\n          <Pane>\n            {React.useMemo(\n              () => (\n                <TileLayer {...landMap} noWrap />\n              ),\n              [],\n            )}\n          </Pane>\n        </Map>\n      </div>\n    </div>\n  );\n}\n\nfunction Highlight({ highlight, index }) {\n  if (highlight === null) return <h4>Hover over an area to see information</h4>;\n  const item = highlight.data;\n  const date = item?.dates?.[index];\n  const confirmed = date?.confirmed;\n  const deaths = date?.deaths;\n  const population = item?.population;\n  const deathPercent = formatPercent(deaths / confirmed);\n  return (\n    <span>\n      <b>{highlight.displayName}</b>\n      <br />\n      {date ? (\n        <span>\n          <span>\n            {confirmed.toLocaleString()} Confirmed Cases\n            <br />\n          </span>\n          <span>\n            {perMillionPop(confirmed, population).toLocaleString()} Cases Per 1m\n            Population\n            <br />\n          </span>\n          <span>\n            {deaths.toLocaleString()} Deaths\n            <br />\n          </span>\n          <span>\n            {perMillionPop(deaths, population).toLocaleString()} Deaths Per 1m\n            Population\n            <br />\n          </span>\n          <span>\n            {deathPercent}% Deaths for Confirmed Cases\n            <br />\n          </span>\n        </span>\n      ) : (\n        <span>No Cases</span>\n      )}\n    </span>\n  );\n}\n","import React from 'react';\nimport Autocomplete, {\n  createFilterOptions,\n} from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { allDataValues } from './features';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PublicIcon from '@material-ui/icons/Public';\n\nconst filterOptions = createFilterOptions({\n  limit: 100,\n});\n\nexport default function ({ multiple, selected, onChange }) {\n  return (\n    <Autocomplete\n      multiple={multiple || false}\n      filterOptions={filterOptions}\n      options={allDataValues}\n      getOptionLabel={(option) => option.displayName}\n      style={{ width: 300 }}\n      selectOnFocus\n      limitTags={4}\n      renderInput={({ value, onChange, ...params }) => (\n        <TextField\n          {...params}\n          InputProps={{\n            ...params.InputProps,\n            startAdornment:\n              multiple && selected && selected.length > 0 ? (\n                params.InputProps.startAdornment\n              ) : (\n                <InputAdornment position=\"start\">\n                  <PublicIcon color=\"primary\" />\n                </InputAdornment>\n              ),\n          }}\n          label=\"Location Search\"\n          variant=\"outlined\"\n          size=\"small\"\n        />\n      )}\n      value={selected}\n      onChange={onChange}\n    />\n  );\n}\n","import React from 'react';\nimport Autocomplete from './AutocompleteInput';\nimport Typography from '@material-ui/core/Typography';\nimport { worldItem } from './features';\nimport { formatPercent, perMillionPop, formatDate, isToday } from './utils';\n\nexport default function BasicDataSection({ selectedItem, onSelect, index }) {\n  const item = selectedItem ? selectedItem : worldItem;\n  const date = item.dates[index];\n\n  const confirmed = date.confirmed;\n  const deaths = date.deaths;\n  const deathPercent = formatPercent(deaths / confirmed);\n\n  return (\n    <div style={{ color: '#333' }}>\n      <div\n        style={{ marginBottom: 18, display: 'flex', justifyContent: 'center' }}\n      >\n        <Autocomplete\n          selected={selectedItem}\n          onChange={(_, item) => onSelect(item)}\n        />\n      </div>\n      <div style={{ marginBottom: 12 }}>\n        <Typography variant=\"h4\">\n          {item.displayName} Data\n          <Typography variant=\"subtitle2\" component=\"div\">\n            Population {item.population.toLocaleString()}\n          </Typography>\n          <Typography variant=\"caption\" component=\"div\">\n            As of {!isToday(date.date) ? formatDate(date.date) : 'Today'}\n          </Typography>\n        </Typography>\n      </div>\n      <div style={{ marginBottom: 12 }}>\n        <Typography variant=\"h6\">\n          {confirmed.toLocaleString()} Confirmed Cases\n          <Typography variant=\"subtitle2\" component=\"span\">\n            {' '}\n            ({perMillionPop(confirmed, item.population)} per 1m population)\n          </Typography>\n        </Typography>\n      </div>\n\n      <Typography variant=\"h6\">\n        {deaths.toLocaleString()} Deaths\n        <Typography variant=\"subtitle2\" component=\"span\">\n          ({perMillionPop(deaths, item.population)} per 1m population)\n          <br />\n          {deathPercent.toLocaleString()}% of Confirmed Cases\n        </Typography>\n      </Typography>\n    </div>\n  );\n}\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { dateRange } from './features';\nimport { formatDate, usePlayer, perMillionPop } from './utils';\nimport PlaySlider from './PlaySlider';\nimport LeafletSection from './LeafletSection';\nimport BasicDataSection from './BasicDataSection';\nimport { css } from '@emotion/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MoreVertIcon from '@material-ui/icons/MoreHoriz';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nexport default function MapCard() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedItem, setSelectedItem] = React.useState(null);\n  const { play, playing, frame: index, setFrame: setIndex } = usePlayer(\n    dateRange.length,\n  );\n  const [dataKey, setDataKey] = React.useState('confirmed');\n  const [usePopulation, setUsePopulation] = React.useState(false);\n  const anchor = React.useRef();\n\n  const handleMenu = React.useCallback((key, usePop = false) => {\n    return () => {\n      setDataKey(key);\n      setUsePopulation(usePop);\n      setOpen(false);\n    };\n  }, []);\n\n  const calculateValue = React.useCallback(\n    (item, index) => {\n      if (dataKey === 'deathRate') {\n        const v = item?.dates?.[index];\n        if (!v || v?.confirmed === 0) return undefined;\n        return v?.deaths / v?.confirmed;\n      }\n      if (usePopulation) {\n        return perMillionPop(item?.dates?.[index]?.[dataKey], item?.population);\n      }\n      return item?.dates?.[index]?.[dataKey];\n    },\n    [usePopulation, dataKey],\n  );\n\n  return (\n    <>\n      <Card\n        css={css`\n          margin-bottom: 20px;\n          position: relative;\n        `}\n      >\n        <CardContent>\n          <div\n            ref={anchor}\n            style={{\n              position: 'absolute',\n              top: 10,\n              right: 10,\n            }}\n          >\n            <IconButton aria-label=\"settings\" onClick={() => setOpen(!open)}>\n              <MoreVertIcon />\n            </IconButton>\n          </div>\n          <BasicDataSection\n            index={index}\n            onSelect={setSelectedItem}\n            selectedItem={selectedItem}\n          />\n        </CardContent>\n        <PlaySlider\n          playing={playing}\n          play={play}\n          index={index}\n          length={dateRange.length}\n          setIndex={setIndex}\n          formatLabel={(i) => formatDate(dateRange[i])}\n          hideTip={false}\n        />\n        <LeafletSection\n          calculateValue={calculateValue}\n          index={index}\n          onSelect={setSelectedItem}\n          centeredItem={selectedItem}\n        />\n      </Card>\n      <Popper\n        open={open}\n        anchorEl={anchor.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={() => setOpen(false)}>\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\">\n                  <MenuItem onClick={handleMenu('confirmed')}>\n                    Confirmed Cases\n                  </MenuItem>\n                  <MenuItem onClick={handleMenu('confirmed')}>\n                    Confirmed Cases\n                  </MenuItem>\n                  <MenuItem onClick={handleMenu('deaths')}>Deaths</MenuItem>\n                  <MenuItem onClick={handleMenu('confirmed', true)}>\n                    Confirmed Cases Per 1m Population\n                  </MenuItem>\n                  <MenuItem onClick={handleMenu('deaths', true)}>\n                    Deaths Per 1m Population\n                  </MenuItem>\n                  <MenuItem onClick={handleMenu('deathRate')}>\n                    Death Rate for Confirmed Cases\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import { Highlight } from 'react-vis';\nimport { getAttributeScale } from 'react-vis/dist/utils/scales-utils';\n\nexport default class ControlledHighlight extends Highlight {\n  componentDidMount() {\n    this.updateArea(this.props.area);\n  }\n\n  componentDidUpdate() {\n    if (!this.state.brushing && !this.state.dragging) {\n      this.updateArea(this.props.area);\n    }\n  }\n\n  updateArea(area) {\n    let newLeft = 0;\n    let newRight = 0;\n    if (area) {\n      const { left, right } = area;\n      const xScale = getAttributeScale(this.props, 'x');\n\n      const { marginLeft } = this.props;\n\n      newLeft = xScale(left) + marginLeft;\n      newRight = xScale(right) + marginLeft;\n    }\n\n    const { left, right } = this.state.brushArea;\n    if (left !== newLeft || right !== newRight) {\n      const { innerHeight, marginBottom, marginTop } = this.props;\n      const plotHeight = innerHeight + marginTop + marginBottom;\n\n      this.setState({\n        brushArea: {\n          left: newLeft,\n          right: newRight,\n          top: 0,\n          bottom: plotHeight,\n        },\n        dragArea: this.props.drag\n          ? {\n              left: newLeft,\n              right: newRight,\n              top: 0,\n              bottom: plotHeight,\n            }\n          : null,\n      });\n    }\n  }\n\n  render() {\n    const result = super.render();\n    const rect = result.props.children[0];\n    const newRect = {\n      ...rect,\n      props: {\n        ...rect.props,\n        onTouchStart: (e) => {\n          const evt = {\n            ...e,\n            nativeEvent: {\n              ...e.nativeEvent,\n              type: 'touchstart',\n              pageX: e.nativeEvent.touches[0].pageX,\n              pageY: e.nativeEvent.touches[0].pageY,\n            },\n          };\n          e.preventDefault();\n          this.startBrushing(evt);\n        },\n        onTouchMove: (e) => {\n          const evt = {\n            ...e,\n            nativeEvent: {\n              ...e.nativeEvent,\n              offsetX: e.nativeEvent.touches[0].pageX,\n              offsetY: e.nativeEvent.touches[0].pageY,\n            },\n          };\n          e.preventDefault();\n          this.onBrush(evt);\n        },\n      },\n    };\n    const newResult = {\n      ...result,\n      props: {\n        ...result.props,\n        children: [newRect, ...result.props.children.slice(1)],\n      },\n    };\n    return newResult;\n  }\n}\n","import React from 'react';\nimport { curveCatmullRom } from 'd3-shape';\n\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  ChartLabel,\n  HorizontalGridLines,\n  VerticalGridLines,\n  LineSeries,\n  DiscreteColorLegend,\n  makeWidthFlexible,\n  Crosshair,\n  MarkSeries,\n} from 'react-vis';\nimport { css as globalCss } from 'emotion';\nimport ControlledHighlight from './ControlledHighlight';\nimport Loader from './Loader';\nimport { worldItem, dateRange, allData } from './features';\nimport { formatDate, values, perMillionPop } from './utils';\n\nfunction calculateIncrease(current, old) {\n  if (old === null || old === undefined) return undefined;\n  return Math.round(((current - old) / current) * 1000) / 10;\n}\n\nfunction calculateAdded(current, old) {\n  if (old === null || old === undefined) return undefined;\n  return current - old;\n}\n\nconst mapCalculations = {\n  confirmed: (item) => item.confirmed,\n  deaths: (item) => item.deaths,\n  increaseConfirmed: (item, i, items) =>\n    calculateIncrease(item.confirmed, items?.[i - 1]?.confirmed),\n  addedConfirmed: (item, i, items) =>\n    calculateAdded(item.confirmed, items?.[i - 1]?.confirmed),\n  increaseDeaths: (item, i, items) =>\n    calculateIncrease(item.confirmed, items?.[i - 1]?.confirmed),\n  confirmedPerMillion: (date, i, dates, item) =>\n    perMillionPop(date.confirmed, item.population),\n  deathsPerMillion: (date, i, dates, item) =>\n    perMillionPop(date.deaths, item.population),\n};\n\nexport const typeText = {\n  confirmed: 'Confirmed Cases',\n  deaths: 'Deaths',\n  increaseConfirmed: '% Change in Cases',\n  addedConfirmed: 'Daily Added Cases',\n  increaseDeaths: '% Change in Deaths',\n  confirmedPerMillion: 'Confirmed Cases Per 1M Population',\n  deathsPerMillion: 'Deaths Per 1M Population',\n};\n\nconst formatValue = {\n  confirmed: (n) => `${n.toLocaleString()} Confirmed Cases`,\n  deaths: (n) => `${n.toLocaleString()} Deaths`,\n  increaseConfirmed: (n) => `${n.toLocaleString()}% Growth of Cases`,\n  addedConfirmed: (n) => `${n.toLocaleString()} Added Cases`,\n  increaseDeaths: (n) => `${n.toLocaleString()}% Growth of Deaths`,\n  confirmedPerMillion: (n) =>\n    `${n.toLocaleString()} Confirmed Cases Per 1M Population`,\n  deathsPerMillion: (n) => `${n.toLocaleString()} DeathsPer 1M Population`,\n};\n\nconst legendClass = globalCss`\n  text-align: right;\n`;\n\nconst noSelect = globalCss`\n  user-select: none;\n`;\n\nconst crosshairClass = globalCss`\n  .rv-crosshair__line {\n    // z-index: -1;\n    position: relative;\n  }\n`;\n\nfunction formatNumber(d) {\n  if (d < 1000) {\n    return d;\n  }\n  if (d < 1000000) {\n    return `${d / 1000}k`;\n  }\n  return `${d / 1000000}m`;\n}\n\nfunction formatItem(formatValue, item) {\n  return {\n    title: item.displayName,\n    value: formatValue(item.y),\n  };\n}\n\nfunction formatTitle([item]) {\n  return {\n    title: formatDate(item.date),\n  };\n}\n\nfunction mapObject(obj, fn) {\n  return Object.keys(obj).reduce((acc, key) => {\n    return { ...acc, [key]: fn(obj[key]) };\n  }, {});\n}\n\nfunction compact(a) {\n  return a.filter((i) => !!i);\n}\n\nfunction removeLastEach(obj) {\n  return Object.keys(obj).reduce((acc, key) => {\n    return {\n      ...acc,\n      [key]: { ...obj[key], dates: obj[key].dates.slice(0, -1) },\n    };\n  }, {});\n}\n\nfunction getYDomain(data, xDomain) {\n  const keys = Object.keys(data);\n  let maxY = null;\n  let minY = null;\n\n  keys.forEach((key) => {\n    data[key].dates.slice(xDomain[0], xDomain[1] + 1).forEach((item) => {\n      if (maxY === null || item.y > maxY) {\n        maxY = item.y;\n      }\n      if (minY === null || item.y < minY) {\n        minY = item.y;\n      }\n    });\n  });\n  return [minY, maxY * 1.05];\n}\n\nconst defaultWidth = 30;\nfunction getInitialDomain(data) {\n  const keys = Object.keys(data);\n  if (keys.length === 0) return undefined;\n  const last = data[keys[0]].dates.length - 1;\n\n  if (last <= defaultWidth) {\n    return { left: 0, right: last };\n  }\n  return { left: last - defaultWidth, right: last };\n}\n\nconst Plot = makeWidthFlexible(XYPlot);\n\nfunction pick(map, items) {\n  if (items.length === 0) {\n    return { [worldItem.key]: worldItem };\n  }\n  return items.reduce((acc, k) => {\n    return { ...acc, [k]: map[k] };\n  }, {});\n}\n\nexport default function ({\n  selected,\n  loading,\n  onLegendClick,\n  type = 'increaseConfirmed',\n}) {\n  const [crosshairValues, setCrosshairValues] = React.useState([]);\n  const brushing = React.useRef(false);\n  const formattedDates = React.useMemo(() => dateRange.map(formatDate), []);\n  const formatter = React.useMemo(() => formatValue[type], [type]);\n  const text = React.useMemo(() => typeText[type], [type]);\n  const data = React.useMemo(() => {\n    const calc = mapCalculations[type];\n    return removeLastEach(\n      mapObject(\n        pick(\n          allData,\n          selected.map((item) => item.key),\n        ),\n        (item) => {\n          return {\n            ...item,\n            dates: compact(\n              item.dates.map((date, i, dates) => {\n                const y = calc(date, i, dates, item);\n                return {\n                  ...item,\n                  ...date,\n                  x: i,\n                  index: i,\n                  y: y || 0,\n                };\n              }),\n            ),\n          };\n        },\n      ),\n    );\n  }, [selected, type]);\n  const [domain, rawSetDomain] = React.useState(() => getInitialDomain(data));\n  const setDomain = React.useCallback((d) => {\n    setCrosshairValues([]);\n    rawSetDomain(d);\n  }, []);\n  React.useEffect(() => {\n    setDomain(getInitialDomain(data));\n  }, [setDomain, data]);\n\n  const items = React.useMemo(() => values(data), [data]);\n\n  return (\n    <div\n      className={`chart ${noSelect}`}\n      style={{ flex: 1, position: 'relative' }}\n    >\n      <Loader loading={loading} />\n      <div style={{ display: 'flex' }}></div>\n      <div>\n        <Plot\n          animation\n          height={window.innerWidth < 1000 ? 185 : 350}\n          xDomain={domain && [domain.left, domain.right]}\n          yDomain={domain && getYDomain(data, [domain.left, domain.right])}\n          margin={{ left: 45 }}\n        >\n          <HorizontalGridLines />\n          <VerticalGridLines />\n          <XAxis\n            style={{\n              text: {\n                fontSize: window.innerWidth < 1000 ? 7 : 11,\n              },\n            }}\n            tickFormat={(i) => formattedDates[i]}\n          />\n          <YAxis tickFormat={formatNumber} />\n          <ChartLabel\n            text=\"Date\"\n            includeMargin={false}\n            xPercent={0.025}\n            yPercent={1.01}\n          />\n\n          <ChartLabel\n            text={text}\n            className=\"alt-y-label\"\n            includeMargin={false}\n            xPercent={0.03}\n            yPercent={0.06}\n            style={{\n              transform: 'rotate(-90)',\n              textAnchor: 'end',\n            }}\n          />\n          <Crosshair\n            className={crosshairClass}\n            values={crosshairValues}\n            itemsFormat={(items) => items.map((i) => formatItem(formatter, i))}\n            titleFormat={formatTitle}\n          />\n          {items.map((item, i) => (\n            <LineSeries\n              key={item.key}\n              curve={curveCatmullRom.alpha(0.5)}\n              onNearestX={\n                i === 0\n                  ? (value, { index }) => {\n                      if (!brushing.current) {\n                        setCrosshairValues(\n                          items.map((i) => data[i.key].dates[index]),\n                        );\n                      }\n                    }\n                  : null\n              }\n              data={data[item.key].dates}\n            />\n          ))}\n          {crosshairValues[0]\n            ? items.map((item) => (\n                <MarkSeries\n                  animation={false}\n                  key={item.key}\n                  stroke=\"white\"\n                  data={[data[item.key].dates[crosshairValues[0].index]]}\n                />\n              ))\n            : null}\n        </Plot>\n      </div>\n      <div>\n        <Brusher\n          domain={domain}\n          setDomain={setDomain}\n          brushing={brushing}\n          data={data}\n          items={items}\n        />\n      </div>\n      <DiscreteColorLegend\n        onItemClick={selected.length > 0 ? onLegendClick : undefined}\n        className={legendClass}\n        items={items.map((i) => i.displayName)}\n        orientation=\"horizontal\"\n      />\n    </div>\n  );\n}\n\nfunction isValid(data, area) {\n  if (!area) return null;\n  const first = dateRange;\n  return area.left >= 0 && area.right <= first.length - 1;\n}\n\nconst Brusher = React.memo(\n  ({ setDomain: rawSetDomain, domain, brushing, data, items }) => {\n    const [area, rawSetArea] = React.useState(() => getInitialDomain(data));\n    const setArea = React.useMemo(\n      () => (v, domain) => {\n        if (!isValid(data, v)) {\n          return rawSetArea(domain);\n        }\n        rawSetArea(v);\n      },\n      [rawSetArea, data],\n    );\n    const setDomain = React.useMemo(\n      () => (v) => {\n        if (!isValid(data, v)) {\n          return;\n        }\n        rawSetDomain(v);\n      },\n      [rawSetDomain, data],\n    );\n    React.useEffect(() => {\n      setArea(getInitialDomain(data));\n    }, [setArea, data]);\n\n    return (\n      <Plot\n        animation\n        height={window.innerWidth < 1000 ? 60 : 100}\n        style={{ overflow: 'visible' }}\n        margin={{ left: 40, right: 10, top: 10, bottom: 0 }}\n      >\n        {items.map((item, i) => (\n          <LineSeries\n            key={item.key}\n            curve={curveCatmullRom.alpha(0.5)}\n            data={data[item.key].dates}\n          />\n        ))}\n        <ControlledHighlight\n          drag\n          key=\"highlight\"\n          area={area}\n          enableY={false}\n          onBrushStart={() => {\n            brushing.current = true;\n          }}\n          onBrushEnd={(area) => {\n            brushing.current = false;\n            setArea(area, domain);\n            setDomain(area);\n          }}\n          onDrag={(a) => {\n            setDomain(a);\n          }}\n          onDragEnd={(a) => {\n            setArea(a, domain);\n            setDomain(a);\n          }}\n        />\n      </Plot>\n    );\n  },\n);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreHoriz';\nimport { css } from '@emotion/core';\nimport Autocomplete from './AutocompleteInput';\nimport Chart, { typeText } from './Chart';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nexport default function ChartCard() {\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState('confirmed');\n  const [selectedItems, setSelectedItems] = React.useState([]);\n  function handleLegendClick(name) {\n    setSelectedItems(selectedItems.filter((item) => item.displayName !== name));\n  }\n  const anchor = React.useRef();\n\n  function handleType(type) {\n    return () => {\n      setType(type);\n      setOpen(false);\n    };\n  }\n\n  return (\n    <>\n      <Card\n        css={css`\n          margin-bottom: 20px;\n          position: relative;\n        `}\n      >\n        <CardContent>\n          <div\n            ref={anchor}\n            style={{\n              position: 'absolute',\n              top: 10,\n              right: 10,\n            }}\n          >\n            <IconButton aria-label=\"settings\" onClick={() => setOpen(!open)}>\n              <MoreVertIcon />\n            </IconButton>\n          </div>\n          <div\n            style={{\n              marginBottom: 18,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Autocomplete\n              multiple\n              selected={selectedItems}\n              onChange={(_, item) => setSelectedItems(item)}\n            />\n          </div>\n        </CardContent>\n        <Chart\n          selected={selectedItems}\n          onLegendClick={handleLegendClick}\n          type={type}\n        />\n      </Card>\n      <Popper\n        open={open}\n        anchorEl={anchor.current}\n        role={undefined}\n        transition\n        disablePortal\n        style={{ zIndex: 1000 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={() => setOpen(false)}>\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\">\n                  {Object.keys(typeText).map((type) => (\n                    <MenuItem onClick={handleType(type)} key={type}>\n                      {typeText[type]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import React from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Global, css } from '@emotion/core';\nimport Header from './Header';\nimport styled from '@emotion/styled';\nimport MapCard from './MapCard';\nimport ChartCard from './ChartCard';\nimport Snackbar from './Snackbar';\n\nconst cardWidth = 650;\n\nconst Body = styled.div`\n  width: ${cardWidth}px;\n  align-self: center;\n  margin: auto;\n  @media only screen and (max-width: ${cardWidth}px) {\n    width: 100%;\n  }\n`;\n\nfunction App() {\n  return (\n    <div\n      className={`App`}\n      css={css`\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n        min-height: 100vh;\n        path {\n          transition: fill 0.3s;\n        }\n        .map-tip {\n          display: none;\n        }\n        .map-container:hover + .map-tip {\n          display: block;\n        }\n        .rv-mouse-target {\n          touch-action: pan-x;\n        }\n      `}\n    >\n      <Global\n        styles={css`\n          body {\n            background-color: #f5f5f5;\n          }\n        `}\n      />\n      <Header />\n      <Body>\n        <MapCard />\n        <ChartCard />\n      </Body>\n      <Snackbar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}